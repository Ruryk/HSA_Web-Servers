worker_processes  1;

events {
    worker_connections  1024;
}

http {
    # Define a cache zone
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:10m max_size=1g inactive=1h use_temp_path=off;

    # Define cache status mapping
    map $upstream_cache_status  $cache_status {
        "MISS"       "MISS";
        "HIT"        "HIT";
        "BYPASS"     "BYPASS";
        "EXPIRED"    "EXPIRED";
        "STALE"      "STALE";
        "UPDATING"   "UPDATING";
        "REVALIDATED" "REVALIDATED";
        default      "MISS";
    }

    # Define cache bypass condition
    map $request_uri $cache_bypass {
        default 1;
        "~*^/images/.*" 0;
    }

    # Define cache key
    map $request_uri $cache_key {
        default "";
        "~*^/images/.*" $request_uri;
    }

    # Upstream definition for the caching server
    upstream cache_server {
        server 127.0.0.1:3001;  # Address of the cache server
    }

    server {
        listen 3000;

        # Location for handling static files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            add_header X-Cache-Status $cache_status always;
            add_header X-Debug-Cache $sent_http_x_cache always;
        }

        # Location for handling images with caching
        location /images/ {
            proxy_pass http://cache_server;  # Forward requests to the cache server
            proxy_cache my_cache;
            proxy_cache_bypass $cache_bypass;
            proxy_no_cache $cache_bypass;
            proxy_cache_valid 200 1h;
            proxy_cache_key $cache_key;
            add_header X-Cache-Status $cache_status always;
            add_header X-Debug-Cache $sent_http_x_cache always;
            add_header X-Cache-Key $cache_key always;
        }

        # Location for cache purging
        location ~ /purge(/.*) {
            allow all;  # Allow all requests for purging
            root /var/cache/nginx;
            try_files /purge_cache.sh $1;
            if ($request_method = POST) {
                return 200;
            }
        }
    }

    # Define a second server to serve static files (the cache server)
    server {
        listen 3001;

        location / {
            root /usr/share/nginx/html;
            index index.html;
        }
    }
}
